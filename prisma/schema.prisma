datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  active   Boolean  @default(false)
  role     Role     @default(USER)
  // Relation fields & index
  profile  Profile?
  Token    Token[]

  @@index([email])
  @@index([active])
}

enum Role {
  USER
  ADMIN
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime
  // Relation fields & index
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String

  @@index([userId])
}

enum TokenType {
  EMAIL // used as a short-lived token sent to the user's email
  API
}

model Profile {
  id     Int     @id @default(autoincrement())
  name   String?
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  @@index([userId])
}
